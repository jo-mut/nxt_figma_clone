{"version":3,"sources":["app/components/cursors/live_cursors.cljs"],"mappings":";AAKA,mDAAA,nDAAMA,8GACHC;AADH,AAEE,OAACC,4CAAI,WAAAC;AAAA,AAAA,IAAAC,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;mBAAA,AAAAE,4CAAAF,eAAA,1EAAaG;eAAb,AAAAD,4CAAAF,eAAA,tEAA0BI;AAA1B,AACE,oBAAMA;AAAN,AACE,IAAMC,cAAY,AAACC,gBAAMC;IACnBC,eAAa,AAACC,6CAAK,AAACC,cAAIP,aAAaE,aAAaE;AADxD,AAAA,+HAAA,2CAAA,oFAAA,oEAAA,iEAAA,kEAAA,3WAEGI,uJAA8BR,oEACAK,4DACA,AAAA,AAAIJ,kEACJ,AAAA,AAAIA,6EACJ,AAAIA;;AAPvC;;GAQFP","names":["app.components.cursors.live-cursors/live-cursors","others","cljs.core.map","p__11922","map__11923","cljs.core/--destructure-map","cljs.core.get","connectionId","presence","color-count","cljs.core/count","app.constants.index/colors","random-color","cljs.core.take","cljs.core/mod","app.components.cursors.cursor/cursor"],"sourcesContent":["(ns app.components.cursors.live-cursors\n  (:require\n   [app.components.cursors.cursor :as cursor]\n   [app.constants.index :as colors]))\n\n(defn live-cursors\n  [others]\n  (map (fn [{:keys [connectionId presence]}]\n         (when presence\n           (let [color-count (count colors/colors)\n                 random-color (take (mod connectionId color-count) colors/colors)]\n             [cursor/cursor {:connection-id connectionId\n                             :color         random-color\n                             :x             (-> presence .-cursor .-x)\n                             :y             (-> presence .-cursor .-y)\n                             :message       (-> presence .-message)}])))\n       others))"]}