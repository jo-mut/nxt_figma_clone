{"version":3,"sources":["app/components/live.cljs"],"mappings":";;;AAQA,AAAKA,mCAAa,gDAAA,2CAAA,qEAAA,hKAACC;AAEnB,mCAAA,nCAAMC,8EACHC;AADH,AAEE,OAACC,4CACA,WAAKC;AAAL,AACE,IAAMC,OAAK,AAAwB,AAAiBD;IAC9CE,IAAE,CAAG,AAAWF,YAAG,AAAKC;IACxBE,IAAE,CAAG,AAAWH,YAAG,AAAKC;AAF9B,AAGE,qGAAA,rGAACG,mDAAMT,iCAAaU,sFACb,WAAKC;AAAL,AAAY,2DAAA,oDAAA,xGAACC,8CAAMD;;;AAC1B,IAAAE,WAAA,YAAA,2CAAA,iDAAA,FAAqCN,kDAAKC;AAA1C,AAAA,4GAAAK,0CAAAA,9IAACV,mDAAAA,6DAAAA;GAPN,mFAQEA;;AAEJ,oCAAA,pCAAMW,gFACHX;AADH,AAEE,OAACC,4CACA,WAAKC;AAAL,AACE,AAAiBA;;AACjB,IAAAU,WAAA,YAAA,+CAAA;AAAA,AAAA,4GAAAA,0CAAAA,9IAACZ,mDAAAA,6DAAAA;GAHJ,mFAKEA;;AAEJ,mCAAA,nCAAMa,8EACHb;AADH,AAEE,OAACC,4CACA,WAAKC;AAAL,AACE,IAAMC,OAAK,AAAwB,AAAiBD;IAC9CE,IAAE,CAAG,AAAWF,YAAG,AAAKC;IACxBE,IAAE,CAAG,AAAWH,YAAG,AAAKC;AAF9B,AAGE,IAAAW,WAAA,YAAA,2CAAA,iDAAA,FAAqCV,kDAAKC;AAA1C,AAAA,4GAAAS,0CAAAA,9IAACd,mDAAAA,6DAAAA;GALN,mFAMEA;;AAEJ,2BAAA,3BAAMe;AAAN,AACE,IAAMG,SAAO,AAACC;IAAdH,aACuC,AAACK;kBADxC,AAAAJ,4CAAAD,WAAA,IAAA,zEACOI;yBADP,AAAAH,4CAAAD,WAAA,IAAA,hFACmBhB;IACbsB,WAAS,wHAAA,2EAAA,nMAACC,0DAAQH;IAClBI,oBAAkB,AAACzB,iCAAaC;IAChCyB,qBAAmB,AAACd,kCAAcX;IAClC0B,oBAAkB,AAACb,iCAAab;IAChC2B,SAAO,wDAAA,mFAAA,3IAACC,+CAAON;AANrB,AAQE,AAACO,0CACA;AAAA,AACE,IAAMC,YAAU,WAAKC;AAAL,AACE,GACE,uDAAA,vDAACC,6CAAE,AAAOD;mBAER,qGAAA,rGAACzB,mDAAMT,iCAAaU,sFACb,WAAKC,xMAKZ,OAAC0B;AALM,iJACM1B,9CACA,oDAAA,6EAAA,jIAACC,9CACD,qLAAA,2DAAA,hPAACA,rDACD,ySAAA,oDAAA,tVAACA;IACd,gBAAA,AAAAwB,gBAAiCpC;;AATrC,GAWE,uDAAA,vDAACmC,6CAAE,AAAOD;AACV;AAAA,AACE,IAAAI,iBAAA,aAAA;AAAA,AAAA,qGAAAA,gDAAAA,pJAACnC,mDAAAA,mEAAAA;;AACD,2FAAA,oDAAA,xIAACM,mDAAMT;;;AAdX;;;;IAeZuC,cAAY,WAAKL;AAAL,AACE,GAAM,uDAAA,vDAACC,6CAAE,AAAID;AAAb,AACE,OAAIA;;AADN;;;AAjBpB,AAoBE,wBAAA,xBAAmBM,gCAAkBP;;AACrC,wBAAA,xBAAmBO,kCAAoBD;;AAEvC;AAAA,AACE,2BAAA,3BAAsBC,mCAAkBP;;AACxC,kCAAA,3BAAsBO,qCAAoBD;;GA3BjD,mFA6BEpC;;AAEF,6DAAA,mFAAA,mDAAA,2CAAA,6FAAA,+FAAA,4FAAA,gEAAA,inBAAA,oIAAA,2CAAA,/1CAACsC,kTACwBd,8FACCC,6FACDC,oOAGvB,0BAAA,AAAA,2HAAA,2CAAA,gEAAA,sGAAA,mHAAA,vcAAMC,2FACHY,4IACSZ,4EACM9B,iHACMG,4HACvBwC,qJAA+BtB","names":["app.components.live/cursor-state","reagent.core.atom","app.components.live/pointer-move","update-my-presence","js/module$node_modules$react$index.useCallback","e","rect","x","y","cljs.core.swap_BANG_","cljs.core/update","state","cljs.core.assoc","G__12466","app.components.live/pointer-leave","G__12467","app.components.live/pointer-down","G__12468","app.components.live/view","vec__12469","cljs.core.nth","others","js/module$node_modules$$liveblocks$react$dist$suspense.useOthers","my-presence","js/module$node_modules$$liveblocks$react$dist$suspense.useMyPresence","presence","cljs.core.js__GT_clj","handlePointerMove","handlePointerLeave","handlePointerDown","cursor","cljs.core.get_in","js/module$node_modules$react$index.useEffect","on-key-up","event","cljs.core._EQ_","cljs.core/deref","js/console.log","G__12472","on-key-down","js/window","reagent.core.as_element","app.components.cursors.cursor-chat/view","app.components.cursors.live-cursors/live-cursors"],"sourcesContent":["(ns app.components.live\n  (:require\n   [\"@liveblocks/react/suspense\" :refer [useOthers, useMyPresence]]\n   [\"react\" :as react]\n   [app.components.cursors.cursor-chat :as cursor-chat]\n   [app.components.cursors.live-cursors :as cursors]\n   [reagent.core :as r]))\n\n(def cursor-state (r/atom {:cursor-state {}}))\n\n(defn pointer-move\n  [update-my-presence]\n  (react/useCallback\n   (fn [e]\n     (let [rect (.getBoundingClientRect (.-currentTarget e))\n           x (- (.-clientX e) (.-x rect))\n           y (- (.-clientY e) (.-y rect))]\n       (swap! cursor-state update :cursor-state \n              (fn [state] (assoc state :mode :chat)))\n       (update-my-presence #js {:cursor {:x x :y y}})))\n   [update-my-presence]))\n\n(defn pointer-leave\n  [update-my-presence]\n  (react/useCallback\n   (fn [e]\n     (.preventDefault e)\n     (update-my-presence #js {:cursor {}\n                              :message {}}))\n   [update-my-presence]))\n\n(defn pointer-down\n  [update-my-presence]\n  (react/useCallback\n   (fn [e]\n     (let [rect (.getBoundingClientRect (.-currentTarget e))\n           x (- (.-clientX e) (.-x rect))\n           y (- (.-clientY e) (.-y rect))]\n       (update-my-presence #js {:cursor {:x x :y y}})))\n   [update-my-presence]))\n\n(defn view []\n  (let [others (useOthers)\n        [my-presence update-my-presence] (useMyPresence)\n        presence (js->clj my-presence :keywordize-keys true)\n        handlePointerMove (pointer-move update-my-presence)\n        handlePointerLeave (pointer-leave update-my-presence)\n        handlePointerDown (pointer-down update-my-presence)\n        cursor (get-in presence [:cursor])]\n\n    (react/useEffect\n     (fn []\n       (let [on-key-up (fn [event]\n                         (cond\n                           (= (.-key event) \"/\")\n                           (->\n                             (swap! cursor-state update :cursor-state\n                                    (fn [state]\n                                      (-> state\n                                          (assoc  :previous-message nil)\n                                          (assoc  :message          \"\")\n                                          (assoc  :mode             :chat))))\n                             (js/console.log \"cursor mode: \" @cursor-state))\n\n                           (= (.-key event) \"Escape\")\n                           (fn []\n                             (update-my-presence #js {:message \"\"})\n                             (swap! cursor-state :mode :hidden))))\n             on-key-down (fn [event]\n                           (when (= (-> event .-key) \"/\")\n                             (-> event .preventDefault)))]\n\n         (.addEventListener js/window \"keyup\" on-key-up)\n         (.addEventListener js/window \"keydown\" on-key-down)\n\n         (fn []\n           (.removeEventListener js/window \"keyup\" on-key-up)\n           (.removeEventListener js/window \"keydown\" on-key-down))))\n\n     [update-my-presence])\n\n    (r/as-element\n     [:div {:on-pointer-move handlePointerMove\n            :on-pointer-leave handlePointerLeave\n            :on-pointer-down handlePointerDown\n            :className \"h-[100vh] w-full flex justify-center items-center \n                                        text-center border border-2 border-cyan-500\"}\n      (when cursor\n        [cursor-chat/view\n         {:cursor cursor\n          :cursor-state cursor-state\n          :update-my-presence update-my-presence}])\n      [cursors/live-cursors  {:others others}]])))"]}