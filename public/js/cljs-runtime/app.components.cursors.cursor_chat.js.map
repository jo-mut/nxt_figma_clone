{"version":3,"sources":["app/components/cursors/cursor_chat.cljs"],"mappings":";;AAOA,mDAAA,nDAAMA,8GACHC,MAAMC,mBAAmBC;AAD5B,AAEE,IAAMC,UAAQ,AAAA,AAAIH;IACZG,cAAQA;IACRC,OAAQ,AAAA,kFAAOC;AAFrB,AAGE,IAAAC,iBAAA,aAAkCH;AAAlC,AAAA,qGAAAG,gDAAAA,pJAACL,mDAAAA,mEAAAA;;AACD,wFAAA,jFAACM,mDAAML,aAAaM,sFACb,WAAKC;AAAL,mGACMA,9CACA,oDAAA,pDAACC,+GAAgBP,pKACjB,iLAAA,1KAACO,8NAAgBN;;;AAElC,qDAAA,rDAAMO,kHACHX,MAAMC,mBAAmBC;AAD5B,AAEE,IAAMC,UAAQ,AAAA,AAAIH;IACZI,OAAQ,AAAA,uFAASC;AADvB,AAEE,GACE,uDAAA,vDAACO,6CAAE,AAAIZ;AACP,wFAAA,jFAACO,mDAAML,aAAaM,sFACb,WAAKC;AAAL,iJACMA,9CACA,oDAAA,pDAACC,iIAAyBP,/KAC1B,wLAAA,2DAAA,nPAACO,rDACD,4SAAA,rSAACA,yVAAyBN;;;AAPzC,GASE,uDAAA,vDAACQ,6CAAE,AAAIZ;AACP,wFAAA,jFAACO,mDAAML,aAAaM,sFACb,WAAKC;AAAL,qDACMA,rDACA,2DAAA,pDAACC,wGAAgBN;;;AAbhC;;;;AAeJ,0CAAA,1CAAMS;AAAN,AAEE,kBAAAC;AAAA,AAAA,IAAAC,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;aAAA,AAAAE,4CAAAF,eAAA,pEAAaG;mBAAb,AAAAD,4CAAAF,eAAA,1EAAoBb;yBAApB,AAAAe,4CAAAF,eAAA,hFAAiCd;AAAjC,AACE,IAAAkB,aAAoBD;IAApBC,iBAAA,AAAAH,4BAAAG;QAAA,AAAAF,4CAAAE,eAAA,/DAAcE;QAAd,AAAAJ,4CAAAE,eAAA,/DAAgBG;IACVC,YAAU,gDAAA,hDAACC;IADjBJ,aAE8C,AAAA,mGAAA,AAAAM,gBAAgBxB;IAF9DkB,iBAAA,AAAAJ,4BAAAI;uBAAA,AAAAH,4CAAAG,eAAA,9EAEcK;WAFd,AAAAR,4CAAAG,eAAA,lEAE+BhB;cAF/B,AAAAa,4CAAAG,eAAA,rEAEoCjB;AAFpC,AAGE,AAACwB,0BACA;AAAA,AACE,oBAAA,AAAAD,gBAAOH;AAAP,AACE,OAAA,AAAAG,gBAASH;;AADX;;;;AAEH,6DAAA,mFAAA,mDAAA,2CAAA,gEAAA,wBAAA,uDAAA,2CAAA,8NAAA,0HAAA,2CAAA,uDAAA,uBAAA,mFAAA,mDAAA,2CAAA,gEAAA,oIAAA,mFAAA,8CAAA,2CAAA,gEAAA,8CAAA,mFAAA,sDAAA,2CAAA,gEAAA,oFAAA,mDAAA,WAAAK,v4DAACG,geAE0B,CAAA,6DAAA,iEAAA,pEAAmBV,iEAAoBC,sHAC/DU,sxBAG8BP;AANjC,AAQ0B,uCAAAG,hCAACK,sBAAOV;GARlC,mEAAA,oEAAA,WAAAM,vFASyB1B;AATzB,AAU0B,0DAAA0B,nDAAClB,oEAAkBV,mBAAmBC;GAVhE,+DAAA,WAAA4B;AAAA,AAW0B,wDAAAA,jDAAC/B,kEAAgBE,mBAAmBC;GAX9D,mEAYyB,AAAA","names":["app.components.cursors.cursor-chat/handle-change","event","update-my-presence","cursor-state","message","mode","app.lib.types/cursor-mode","G__12664","cljs.core.swap_BANG_","cljs.core/update","state","cljs.core.assoc","app.components.cursors.cursor-chat/handle-key-down","cljs.core._EQ_","app.components.cursors.cursor-chat/view","p__12668","map__12669","cljs.core/--destructure-map","cljs.core.get","cursor","map__12670","map__12671","x","y","input-ref","reagent.core.atom","previous-message","cljs.core/deref","reagent.core/after-render","p1__12665#","p1__12666#","p1__12667#","reagent.core.as_element","app.components.cursors.cursor-svg/view","cljs.core/reset!"],"sourcesContent":["(ns app.components.cursors.cursor-chat\n  (:require\n   [reagent.core :as r]\n   [\"react\" :as react]\n   [app.lib.types :as custom]\n   [app.components.cursors.cursor-svg :as cursor-svg]))\n\n(defn handle-change\n  [event update-my-presence cursor-state]\n  (let [message (-> event .-target .-value)\n        message message\n        mode    (:Chat custom/cursor-mode)]\n    (update-my-presence #js {:message message})\n    (swap! cursor-state update :cursor-state\n           (fn [state]\n             (-> state\n                 (assoc  :message message)\n                 (assoc  :mode    mode))))))\n\n(defn handle-key-down\n  [event update-my-presence cursor-state]\n  (let [message (-> event .-target .-value)\n        mode    (:Hidden custom/cursor-mode)]\n    (cond\n      (= (-> event .-key) \"Enter\")\n      (swap! cursor-state update :cursor-state\n             (fn [state]\n               (-> state\n                   (assoc  :previous-message message)\n                   (assoc  :message          \"\")\n                   (assoc  :mode             mode))))\n\n      (= (-> event .-key) \"Escape\")\n      (swap! cursor-state update :cursor-state\n             (fn [state]\n               (-> state\n                   (assoc  :mode    mode)))))))\n\n(defn view\n  []\n  (fn [{:keys [cursor cursor-state update-my-presence]}]\n    (let [{:keys [x y]} cursor\n          input-ref (r/atom nil)\n          {:keys [previous-message mode message]} (:cursor-state @cursor-state)]\n      (r/after-render\n       (fn []\n         (when @input-ref\n           (.focus @input-ref))))\n      (r/as-element\n       [:div {:className \"absolute top-0 left-0\"\n              :style {:transform (str \"translateX(\" x \"px) translateY(\" y \"px)\")}}\n        [cursor-svg/view {:color \"#000\"}]\n        [:div {:className \"absolute left-2 top-5 bg-blue-500 px-4 py-2 text-sm \n                          leading-relaxed text-white rounded-[20px]\"}\n         [:p {:className \"text-white\"} previous-message]\n         [:input {:className \"z-10 w-60 border-none bg-transparent text-white placeholder-blue-300 outline-none\"\n                  :ref         #(reset! input-ref %)\n                  :message     message\n                  :on-key-down #(handle-key-down % update-my-presence cursor-state)\n                  :on-change   #(handle-change % update-my-presence cursor-state)\n                  :placeholder (if \"previous-message\"\n                                 \"\"\n                                 \"Type a message...\")}]]]))))"]}